#!/usr/bin/env bash

{ # this ensures the entire script is downloaded #

# VARIABLES
DOTFILES="wmbest2/dotfiles"
ruby_version=2.6.1

case "$OSTYPE" in
  solaris*) os="SOLARIS" ;;
  darwin*)  os="OSX" ;; 
  linux*)   os="LINUX" ;;
  bsd*)     os="BSD" ;;
  msys*)    os="WINDOWS" ;;
  *)        os="unknown: $OSTYPE" ;;
esac

# colors
reset="\033[0m"
red="\033[31m"
yellow="\033[33m"
green="\033[32m"
cyan="\033[36m"

# log functions
log() {
  printf "$cyan$1$reset\n"
}

header() {
  printf "\n$green== $1 ==$reset\n"
}

success() {
  printf "👍 $green $1$reset\n"
}

warn() {
  printf "$yellow[WARNING] $1$reset\n"
}

error() {
  printf "$red[ERROR] $1$reset\n"
}

command_exists() {
  type "$1" &> /dev/null;
}

install_dotfiles() {
    $(yadm clone git@github.com:$DOTFILES.git)
    if [ $? -ne 0 ]; then
        log "yadm already setup, fetching lastest changes"
        yadm fetch
        yadm pull
    fi
    success "dot files installed"
}

install_homebrew() {
  if ! command_exists brew; then
    local wasLinux=0
    if [[ "$os" == "OSX" ]]; then
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    elif [[ "$os" == "LINUX" ]]; then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"
        waslinux=1
    fi
    success "Installed Homebrew"
    [ waslinux -eq 1 ] && log "Linux brew may require running\n echo 'export PATH=\"$HOME/.linuxbrew/bin:$PATH\"' >> ~/.bashrc"
  else
    log "Homebrew already installed"
  fi
}

brew_install() {
  local package=$1

  if [[ -d "${brew_cellar}/${package}" ]]; then
    log "${package} already installed"
  elif [[ "${package}" == "build-essential" ]]; then
    true
  else
    brew install $package
    success "Installed ${package}"
  fi
}

## Main Script

# Install homebrew if it isn't already
header "Checking for Homebrew"
install_homebrew
brew_cellar=$(brew --cellar)

brew_install "yadm"

#Install Dotfiles
header "Installing dot files"
install_dotfiles

}
